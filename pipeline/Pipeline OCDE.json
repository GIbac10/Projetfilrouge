{
	"name": "Pipeline OCDE",
	"properties": {
		"activities": [
			{
				"name": "Extraction donnees OCDE API",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Extraction_donnees_OCDE_API",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "JGOCDE",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 2,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 2
				}
			},
			{
				"name": "Nettoyage donnees",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Extraction donnees OCDE API",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Nettoyage",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "JGOCDE",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 2,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 2
				}
			},
			{
				"name": "EXPORT SQL DES NOUVELLES DONNEES",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Traitement des donnees",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "DROP EXTERNAL TABLE dbo.cotisationsecu;\nDROP EXTERNAL TABLE dbo.couverturesociale;\nDROP EXTERNAL TABLE dbo.depensesante;\nDROP EXTERNAL TABLE dbo.depensessociales;\nDROP EXTERNAL TABLE dbo.pib;\nDROP EXTERNAL TABLE dbo.population;\n\n\nCREATE EXTERNAL TABLE dbo.cotisationsecu (\n\t[PAYS] nvarchar(4000),\n\t[ANNEE] nvarchar(4000),\n\t[COTISATION_SECU(%PIB)] float\n\t)\n\tWITH (\n\tLOCATION = 'argent/cotisationsecu/**',\n\tDATA_SOURCE = ExternalDatasourceDatalake,\n\tFILE_FORMAT = ParquetFileFormat\n\t);\n\nCREATE EXTERNAL TABLE dbo.couverturesociale (\n\t[PAYS] nvarchar(50),\n\t[ANNEE] nvarchar(50),\n\t[POPULATION_COUVERTE(Milliers_personnes)] float,\n\t[POPULATION_COUVERTE(%)] float\n\t)\n\tWITH (\n\tLOCATION = 'argent/couverturesociale/**',\n\tDATA_SOURCE = ExternalDatasourceDatalake,\n\tFILE_FORMAT = ParquetFileFormat\n\t);\n\n\n\nCREATE EXTERNAL TABLE dbo.depensesante (\n\t[PAYS] nvarchar(4000),\n\t[ANNEE] nvarchar(4000),\n\t[DEPENSE_SANTE_%_PIB] float,\n\t[NB_HABITANTS] float\n\t)\n\tWITH (\n\tLOCATION = 'argent/depensesante/**',\n\tDATA_SOURCE = ExternalDatasourceDatalake,\n\tFILE_FORMAT = ParquetFileFormat\n\t);\n\nCREATE EXTERNAL TABLE dbo.depensessociales (\n\t[PAYS] nvarchar(4000),\n\t[ANNEE] nvarchar(4000),\n\t[DEPENSES_SOCIALES(%_PIB)] float\n\t)\n\tWITH (\n\tLOCATION = 'argent/depensessociales/**',\n\tDATA_SOURCE = ExternalDatasourceDatalake,\n\tFILE_FORMAT = ParquetFileFormat\n\t);\n\nCREATE EXTERNAL TABLE dbo.pib (\n\t[PAYS] nvarchar(4000),\n\t[ANNEE] nvarchar(4000),\n\t[PIB(Millions_Dollards)] float,\n\t[PIB_PAR_HAB] float\n\t)\n\tWITH (\n\tLOCATION = 'argent/pib/**',\n\tDATA_SOURCE = ExternalDatasourceDatalake,\n\tFILE_FORMAT = ParquetFileFormat\n\t);\n\nCREATE EXTERNAL TABLE dbo.population (\n\t[PAYS] nvarchar(4000),\n\t[ANNEE] nvarchar(4000),\n\t[MOINS_15_ANS] float,\n\t[15-64_ANS] float,\n\t[PLUS_64_ANS] float,\n\t[NB_HABITANTS] float\n\t)\n\tWITH (\n\tLOCATION = 'argent/population/**',\n\tDATA_SOURCE = ExternalDatasourceDatalake,\n\tFILE_FORMAT = ParquetFileFormat\n\t);\n\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Traitement des donnees",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Nettoyage donnees",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Traitement",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "JGOCDE",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 2,
						"spark.dynamicAllocation.maxExecutors": 2
					},
					"driverSize": "Small",
					"numExecutors": 2
				}
			}
		],
		"annotations": []
	}
}